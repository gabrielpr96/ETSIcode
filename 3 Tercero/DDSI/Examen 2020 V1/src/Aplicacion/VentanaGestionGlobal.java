/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Aplicacion;

import Persistencia.*;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author borja
 */
public class VentanaGestionGlobal extends java.awt.Frame {

    private final ConexionOracle conexion;
    private final DefaultTableModel modeloExpertos, modeloCasos, modeloColaboraciones;
    private static final SimpleDateFormat espFecha = new SimpleDateFormat("dd/MM/yyyy"), isoFecha = new SimpleDateFormat("yyyy-MM-dd");
    private final ManejaExperto mex;
    private final ManejaCaso mca;
    private final ManejaColabora mco;

    /**
     * Creates new form ventanaExpetos
     *
     * @param conexion
     */
    public VentanaGestionGlobal(ConexionOracle conexion) {
        initComponents();
        setLocationRelativeTo(getParent());
        setTitle("Gestión completa de la BD");
        setResizable(false);

        this.conexion = conexion;
        mex = new ManejaExperto(conexion);
        mca = new ManejaCaso(conexion);
        mco = new ManejaColabora(conexion);

        modeloExpertos = new DefaultTableModel();
        modeloExpertos.setColumnIdentifiers(new String[]{"Código", "Nombre", "Pais", "Sexo", "Especialidad"});
        tablaExpertos.setModel(modeloExpertos);
        tablaExpertos.getTableHeader().setResizingAllowed(false);
        tablaExpertos.getColumnModel().getColumn(0).setPreferredWidth(50);
        tablaExpertos.getColumnModel().getColumn(1).setPreferredWidth(200);
        tablaExpertos.getColumnModel().getColumn(2).setPreferredWidth(150);
        tablaExpertos.getColumnModel().getColumn(3).setPreferredWidth(50);
        tablaExpertos.getColumnModel().getColumn(4).setPreferredWidth(200);
        modeloCasos = new DefaultTableModel();
        modeloCasos.setColumnIdentifiers(new String[]{"Código", "Nombre", "Fecha Inicio", "Fecha Fin"});
        tablaCasos.setModel(modeloCasos);
        tablaCasos.getTableHeader().setResizingAllowed(false);
        tablaCasos.getColumnModel().getColumn(0).setPreferredWidth(50);
        tablaCasos.getColumnModel().getColumn(1).setPreferredWidth(250);
        tablaCasos.getColumnModel().getColumn(2).setPreferredWidth(175);
        tablaCasos.getColumnModel().getColumn(3).setPreferredWidth(175);
        modeloColaboraciones = new DefaultTableModel();
        modeloColaboraciones.setColumnIdentifiers(new String[]{"Experto", "Caso", "Fecha", "Descripción"});
        tablaColaboraciones.setModel(modeloColaboraciones);
        tablaColaboraciones.getTableHeader().setResizingAllowed(false);
        tablaColaboraciones.getColumnModel().getColumn(0).setPreferredWidth(50);
        tablaColaboraciones.getColumnModel().getColumn(1).setPreferredWidth(50);
        tablaColaboraciones.getColumnModel().getColumn(2).setPreferredWidth(175);
        tablaColaboraciones.getColumnModel().getColumn(3).setPreferredWidth(375);

        tablaExpertos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                colaboracionExperto.setText(tablaExpertos.getSelectedRow() == -1 ? "" : (String) modeloExpertos.getValueAt(tablaExpertos.getSelectedRow(), 0));
            }
        });
        tablaCasos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                colaboracionCaso.setText(tablaCasos.getSelectedRow() == -1 ? "" : (String) modeloCasos.getValueAt(tablaCasos.getSelectedRow(), 0));
            }
        });
        
        listarTodo.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaExpertos = new javax.swing.JTable();
        jLabelContado = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        expertoEspecialidad = new javax.swing.JTextField();
        expertoSexo = new javax.swing.JTextField();
        expertoPais = new javax.swing.JTextField();
        expertoNombre = new javax.swing.JTextField();
        expertoCodigo = new javax.swing.JTextField();
        insertarExperto = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        casoNombre = new javax.swing.JTextField();
        casoCodigo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCasos = new javax.swing.JTable();
        insertarCaso = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        casoFechaInicio = new com.toedter.calendar.JDateChooser();
        casoFechaFin = new com.toedter.calendar.JDateChooser();
        colaboracionCaso = new javax.swing.JTextField();
        colaboracionExperto = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaColaboraciones = new javax.swing.JTable();
        insertarColaboracion = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        colaboracionDescripcion = new javax.swing.JTextField();
        eliminarExperto = new javax.swing.JButton();
        eliminarCaso = new javax.swing.JButton();
        eliminarColaboracion = new javax.swing.JButton();
        listarTodo = new javax.swing.JButton();
        limpiarTodo = new javax.swing.JButton();
        colaboracionFecha = new com.toedter.calendar.JDateChooser();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        tablaExpertos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaExpertos);

        jLabel3.setText("Código");

        jLabel4.setText("Nombre");

        jLabel5.setText("País");
        jLabel5.setToolTipText("");

        jLabel6.setText("Sexo");

        jLabel7.setText("Especialidad");

        insertarExperto.setText("Insertar Experto");
        insertarExperto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarExpertoActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Listado de Expertos");

        jLabel8.setText("Código");

        jLabel9.setText("Nombre");

        jLabel10.setText("Fecha Inicio");
        jLabel10.setToolTipText("");

        jLabel11.setText("Fecha Fin");

        tablaCasos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tablaCasos);

        insertarCaso.setText("Insertar Caso Policial");
        insertarCaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarCasoActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Listado de Casos Policiales");

        casoFechaInicio.setDateFormatString("yyyy/MM/dd");

        casoFechaFin.setDateFormatString("yyyy/MM/dd");

        colaboracionCaso.setEditable(false);

        colaboracionExperto.setEditable(false);

        tablaColaboraciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tablaColaboraciones);

        insertarColaboracion.setText("Insertar Colaboracion");
        insertarColaboracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarColaboracionActionPerformed(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Listado de Colaboraciones");

        jLabel13.setText("Código Experto");

        jLabel14.setText("Código Caso");

        jLabel15.setText("Fecha");
        jLabel15.setToolTipText("");

        jLabel16.setText("Descripción");

        eliminarExperto.setText("Eliminar Experto");
        eliminarExperto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarExpertoActionPerformed(evt);
            }
        });

        eliminarCaso.setText("Eliminar Caso Policial");
        eliminarCaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarCasoActionPerformed(evt);
            }
        });

        eliminarColaboracion.setText("Eliminar Colaboracion");
        eliminarColaboracion.setToolTipText("");
        eliminarColaboracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarColaboracionActionPerformed(evt);
            }
        });

        listarTodo.setText("Listar Todo");
        listarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarTodoActionPerformed(evt);
            }
        });

        limpiarTodo.setText("Limpiar Todo");
        limpiarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(eliminarCaso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(insertarCaso))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eliminarColaboracion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(insertarColaboracion)
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15)))
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(colaboracionCaso)
                            .addComponent(colaboracionExperto, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(colaboracionDescripcion)
                            .addComponent(colaboracionFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(expertoNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(expertoPais, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(expertoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(expertoSexo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(casoNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(casoFechaInicio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(casoFechaFin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(casoCodigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(eliminarExperto)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(insertarExperto))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(expertoEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(11, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(jLabelContado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(listarTodo)
                .addGap(44, 44, 44)
                .addComponent(limpiarTodo)
                .addGap(204, 204, 204))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(expertoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(expertoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(expertoPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(expertoSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(expertoEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertarExperto)
                            .addComponent(eliminarExperto))
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(casoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(casoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(casoFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(casoFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insertarCaso)
                            .addComponent(eliminarCaso))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(colaboracionExperto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(colaboracionCaso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(colaboracionFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(colaboracionDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insertarColaboracion)
                            .addComponent(eliminarColaboracion))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(limpiarTodo)
                    .addComponent(listarTodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelContado)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        dispose();
    }//GEN-LAST:event_exitForm

    /**
     * Eliminar un caso
     *
     * @param evt
     */
    private void eliminarCasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarCasoActionPerformed
        int sel = tablaCasos.getSelectedRow();
        if (sel != -1) {
            String codCaso = (String) modeloCasos.getValueAt(sel, 0);
            String nombre = (String) modeloCasos.getValueAt(sel, 1);
            if (JOptionPane.showConfirmDialog(this, "¿Desea eliminar el caso " + nombre + "?", "Eliminar caso policial", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                try {
                    mca.eliminaCaso(codCaso);
                    listarCasos();
                } catch (SQLException | ParseException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar caso", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_eliminarCasoActionPerformed

    /**
     * Inserta un caso
     *
     * @param evt
     */
    private void insertarCasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarCasoActionPerformed
        if (((JTextField) casoFechaInicio.getDateEditor().getUiComponent()).getText().isEmpty() || ((JTextField) casoFechaFin.getDateEditor().getUiComponent()).getText().isEmpty())
            JOptionPane.showMessageDialog(this, "Las fechas no pueden estar vacías", "Error al insertar colaboracion", JOptionPane.ERROR_MESSAGE);
        else {
            try {
                Date fInicio = eliminarHora(casoFechaInicio.getDate()), fFin = eliminarHora(casoFechaFin.getDate());
                if (fInicio.compareTo(fFin) > 0) {
                    throw new Exception("La fecha de inicio debe ser anterior a la fecha de fin ");
                }
                mca.insertaCaso(new Caso(casoCodigo.getText(), casoNombre.getText(), espFecha.format(fInicio), espFecha.format(fFin)));
                casoCodigo.setText("");
                casoNombre.setText("");
                casoFechaInicio.setCalendar(null);
                casoFechaFin.setCalendar(null);
                listarCasos();
            } catch (SQLException | ParseException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar caso", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar caso", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_insertarCasoActionPerformed

    /**
     * Elimina una colaboracion
     *
     * @param evt
     */
    private void eliminarColaboracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarColaboracionActionPerformed
        int sel = tablaColaboraciones.getSelectedRow();
        if (sel != -1) {
            String codExperto = (String) modeloColaboraciones.getValueAt(sel, 0);
            String codCaso = (String) modeloColaboraciones.getValueAt(sel, 1);
            String fecha = (String) modeloColaboraciones.getValueAt(sel, 2);

            String nombreCaso;
            try {
                nombreCaso = mca.obtenerCasoPorCodigo(codCaso).getNombre();
            } catch (Exception ex) {
                nombreCaso = codCaso;
            }

            String nombreExperto;
            try {
                nombreExperto = mex.obtenerExpertoPorCodigo(codExperto).getNombre();
            } catch (Exception ex) {
                nombreExperto = codCaso;
            }

            if (JOptionPane.showConfirmDialog(this, "¿Desea la colaboracion de " + nombreExperto + " en el caso " + nombreCaso + " con fecha " + fecha + "?", "Eliminar colaboracion", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                try {
                    mco.eliminaColabora(codExperto, codCaso, fecha);
                    listarColaboraciones();
                } catch (SQLException | ParseException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar colaboracion", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_eliminarColaboracionActionPerformed

    /**
     * Inserta una colaboracion
     *
     * @param evt
     */
    private void insertarColaboracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarColaboracionActionPerformed
        if (((JTextField) colaboracionFecha.getDateEditor().getUiComponent()).getText().isEmpty() || ((JTextField) colaboracionFecha.getDateEditor().getUiComponent()).getText().isEmpty())
            JOptionPane.showMessageDialog(this, "Las fechas no pueden estar vacías", "Error al insertar colaboracion", JOptionPane.ERROR_MESSAGE);
        else {
            try {
                Date fColabora = eliminarHora(colaboracionFecha.getDate());
                Caso caso = mca.obtenerCasoPorCodigo(colaboracionCaso.getText());
                if (isoFecha.parse(caso.getFechaInicio()).compareTo(fColabora) > 0 || isoFecha.parse(caso.getFechaFin()).compareTo(fColabora) < 0) {
                    throw new Exception("La fecha de la colaboracion debe estar comprendida entre la fecah de inicio y fin del caso ");
                }
                mco.insertaColaboracion(new Colabora(colaboracionExperto.getText(), colaboracionCaso.getText(), espFecha.format(fColabora), colaboracionDescripcion.getText()));
                colaboracionExperto.setText("");
                colaboracionCaso.setText("");
                colaboracionFecha.setCalendar(null);
                colaboracionDescripcion.setText("");
                listarColaboraciones();
            } catch (SQLException | ParseException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar colaboracion", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar colaboracion", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_insertarColaboracionActionPerformed

    /**
     * Elimina un experto
     *
     * @param evt
     */
    private void eliminarExpertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarExpertoActionPerformed
        int sel = tablaExpertos.getSelectedRow();
        if (sel != -1) {
            String codExperto = (String) modeloExpertos.getValueAt(sel, 0);
            String nombre = (String) modeloExpertos.getValueAt(sel, 1);
            if (JOptionPane.showConfirmDialog(this, "¿Desea eliminar al experto " + nombre + "?", "Eliminar experto", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                try {
                    mex.eliminaExperto(codExperto);
                    listarExpertos();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar experto", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_eliminarExpertoActionPerformed

    /**
     * Inserta un experto
     *
     * @param evt
     */
    private void insertarExpertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarExpertoActionPerformed
        try {
            mex.insertaExperto(new Experto(expertoCodigo.getText(), expertoNombre.getText(), expertoPais.getText(), expertoSexo.getText(), expertoEspecialidad.getText()));
            expertoCodigo.setText("");
            expertoNombre.setText("");
            expertoPais.setText("");
            expertoSexo.setText("");
            expertoEspecialidad.setText("");
            listarExpertos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar experto", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_insertarExpertoActionPerformed

    /**
     * Muestra todos los expertos, casos y colaboraciones en sus tablas
     *
     * @param evt
     */
    private void listarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarTodoActionPerformed
        try {
            listarExpertos();
            listarCasos();
            listarColaboraciones();
        } catch (SQLException | ParseException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar listar todo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_listarTodoActionPerformed

    /**
     * Vacía todas las tablas y borra los cambios de texto
     *
     * @param evt
     */
    private void limpiarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarTodoActionPerformed
        limpiarExpertos();
        limpiarCasos();
        limpiarColaboraciones();
        expertoCodigo.setText("");
        expertoNombre.setText("");
        expertoPais.setText("");
        expertoSexo.setText("");
        expertoEspecialidad.setText("");
        casoCodigo.setText("");
        casoNombre.setText("");
        casoFechaInicio.setCalendar(null);
        casoFechaFin.setCalendar(null);
        colaboracionExperto.setText("");
        colaboracionCaso.setText("");
        colaboracionFecha.setCalendar(null);
        colaboracionDescripcion.setText("");
    }//GEN-LAST:event_limpiarTodoActionPerformed

    /**
     * Muestra todos los expertos
     *
     * @throws SQLException
     */
    private void listarExpertos() throws SQLException {
        limpiarExpertos();
        ArrayList<Experto> expertos = mex.listaExpertos();
        for (Experto experto : expertos) {
            modeloExpertos.addRow(new String[]{experto.getCodExperto(), experto.getNombre(), experto.getPais(), experto.getSexo(), experto.getEspecialidad()});
        }
    }

    /**
     * Muestra todos los casos
     *
     * @throws SQLException
     * @throws ParseException
     */
    private void listarCasos() throws SQLException, ParseException {
        limpiarCasos();
        ArrayList<Caso> casos = mca.listaCasos();
        for (Caso caso : casos) {
            modeloCasos.addRow(new String[]{caso.getCodCaso(), caso.getNombre(), espFecha.format(isoFecha.parse(caso.getFechaInicio())), caso.getFechaFin() == null ? "En curso" : espFecha.format(isoFecha.parse(caso.getFechaFin()))});
        }
    }

    /**
     * Muestra todas las colaboraciones
     *
     * @throws SQLException
     * @throws ParseException
     */
    private void listarColaboraciones() throws SQLException, ParseException {
        limpiarColaboraciones();
        ArrayList<Colabora> colaboraciones = mco.listaColabora();
        for (Colabora colaboracion : colaboraciones) {
            modeloColaboraciones.addRow(new String[]{colaboracion.getCodExperto(), colaboracion.getCodCaso(), espFecha.format(isoFecha.parse(colaboracion.getFecha())), colaboracion.getDescripcionColaboracion()});
        }
    }

    /**
     * Vacía la tabla de expertos
     */
    private void limpiarExpertos() {
        while (modeloExpertos.getRowCount() > 0) {
            modeloExpertos.removeRow(0);
        }
    }

    /**
     * Vacía la tabla de casos
     */
    private void limpiarCasos() {
        while (modeloCasos.getRowCount() > 0) {
            modeloCasos.removeRow(0);
        }
    }

    /**
     * Vacía la tabla de colaboraciones
     */
    private void limpiarColaboraciones() {
        while (modeloColaboraciones.getRowCount() > 0) {
            modeloColaboraciones.removeRow(0);
        }
    }

    private Date eliminarHora(Date fecha) {
        Calendar cal = Calendar.getInstance(); // locale-specific
        cal.setTime(fecha);
        cal.set(Calendar.HOUR_OF_DAY, 0);
        cal.set(Calendar.MINUTE, 0);
        cal.set(Calendar.SECOND, 0);
        cal.set(Calendar.MILLISECOND, 0);
        return new Date(cal.getTimeInMillis());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField casoCodigo;
    private com.toedter.calendar.JDateChooser casoFechaFin;
    private com.toedter.calendar.JDateChooser casoFechaInicio;
    private javax.swing.JTextField casoNombre;
    private javax.swing.JTextField colaboracionCaso;
    private javax.swing.JTextField colaboracionDescripcion;
    private javax.swing.JTextField colaboracionExperto;
    private com.toedter.calendar.JDateChooser colaboracionFecha;
    private javax.swing.JButton eliminarCaso;
    private javax.swing.JButton eliminarColaboracion;
    private javax.swing.JButton eliminarExperto;
    private javax.swing.JTextField expertoCodigo;
    private javax.swing.JTextField expertoEspecialidad;
    private javax.swing.JTextField expertoNombre;
    private javax.swing.JTextField expertoPais;
    private javax.swing.JTextField expertoSexo;
    private javax.swing.JButton insertarCaso;
    private javax.swing.JButton insertarColaboracion;
    private javax.swing.JButton insertarExperto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelContado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton limpiarTodo;
    private javax.swing.JButton listarTodo;
    private javax.swing.JTable tablaCasos;
    private javax.swing.JTable tablaColaboraciones;
    private javax.swing.JTable tablaExpertos;
    // End of variables declaration//GEN-END:variables
}
