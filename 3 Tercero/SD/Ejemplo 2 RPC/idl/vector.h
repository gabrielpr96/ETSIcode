/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _VECTOR_H_RPCGEN
#define _VECTOR_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAX_VECTOR 100

typedef struct {
	u_int t_vector_len;
	float *t_vector_val;
} t_vector;

struct entrada1 {
	t_vector v;
	float c;
};
typedef struct entrada1 entrada1;

struct entrada2 {
	t_vector v1;
	t_vector v2;
};
typedef struct entrada2 entrada2;

#define OPER_VECTOR 0x30000002
#define OPER_VECTORVER 1

#if defined(__STDC__) || defined(__cplusplus)
#define escalado_vector 1
extern  t_vector * escalado_vector_1(entrada1 *, CLIENT *);
extern  t_vector * escalado_vector_1_svc(entrada1 *, struct svc_req *);
#define suma_vectorial 2
extern  t_vector * suma_vectorial_1(entrada2 *, CLIENT *);
extern  t_vector * suma_vectorial_1_svc(entrada2 *, struct svc_req *);
extern int oper_vector_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define escalado_vector 1
extern  t_vector * escalado_vector_1();
extern  t_vector * escalado_vector_1_svc();
#define suma_vectorial 2
extern  t_vector * suma_vectorial_1();
extern  t_vector * suma_vectorial_1_svc();
extern int oper_vector_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_t_vector (XDR *, t_vector*);
extern  bool_t xdr_entrada1 (XDR *, entrada1*);
extern  bool_t xdr_entrada2 (XDR *, entrada2*);

#else /* K&R C */
extern bool_t xdr_t_vector ();
extern bool_t xdr_entrada1 ();
extern bool_t xdr_entrada2 ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_VECTOR_H_RPCGEN */
